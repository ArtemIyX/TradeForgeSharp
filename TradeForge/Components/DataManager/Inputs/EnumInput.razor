@typeparam TEnum where TEnum : struct, Enum

<div class="field is-horizontal">
    <div class="field-label is-normal">
        <label class="label has-text-light">@Label</label>
    </div>
    <div class="field-body">
        <div class="field">
            <div class="control">
                <div class="select is-fullwidth">
                    <select class="has-background-grey-darker has-text-light"
                            @bind="selectedValue">
                        @foreach (var item in Enum.GetValues<TEnum>())
                        {
                            <option value="@item">@item.ToString()</option>
                        }
                    </select>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public string Label { get; set; } = string.Empty;
    [Parameter] public TEnum Value { get; set; }
    [Parameter] public EventCallback<TEnum> ValueChanged { get; set; }

    private TEnum selectedValue
    {
        get => Value;
        set => ValueChanged.InvokeAsync(value);
    }
}