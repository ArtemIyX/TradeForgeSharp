<div class="is-flex is-align-items-center is-flex-grow-1">
    

    <!-- Buttons – never move -->
    <button class="button is-success @(IsDownloading ? "is-loading" : "")"
            disabled="@IsDownloading"
            @onclick="HandleDownloadAsync">
        Download
    </button>

    <button class="button ml-2" @onclick="HandleDiscard" disabled="@IsDownloading">
        Discard
    </button>

    <!-- ERROR MESSAGE – appears only when set -->
    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <p class="has-text-danger mb-2">@ErrorMessage</p>
    }
</div>


@code {
    
    [Parameter] public EventCallback OnDownload { get; set; }
    [Parameter] public EventCallback OnDiscard { get; set; }

    public string? ErrorMessage { get; set; } = string.Empty;
    public bool IsDownloading { get; set; } = false;

    private async Task HandleDownloadAsync()
    {
        await OnDownload.InvokeAsync();
    }

    private async Task HandleDiscard()
    {
        await OnDiscard.InvokeAsync();
    }
}